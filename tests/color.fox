CColor :: class
{
    // Reset
    RESET: var = "\033[0m";  // Text Reset

    // Regular Colors
    BLACK: var = "\033[0;30m";   // BLACK
    RED: var = "\033[0;31m";     // RED
    GREEN: var = "\033[0;32m";   // GREEN
    YELLOW: var = "\033[0;33m";  // YELLOW
    BLUE: var = "\033[0;34m";    // BLUE
    PURPLE: var = "\033[0;35m";  // PURPLE
    CYAN: var = "\033[0;36m";    // CYAN
    WHITE: var = "\033[0;37m";   // WHITE

    // Bold
    BLACK_BOLD: var = "\033[1;30m";  // BLACK
    RED_BOLD: var = "\033[1;31m";    // RED
    GREEN_BOLD: var = "\033[1;32m";  // GREEN
    YELLOW_BOLD: var = "\033[1;33m"; // YELLOW
    BLUE_BOLD: var = "\033[1;34m";   // BLUE
    PURPLE_BOLD: var = "\033[1;35m"; // PURPLE
    CYAN_BOLD: var = "\033[1;36m";   // CYAN
    WHITE_BOLD: var = "\033[1;37m";  // WHITE

    // Underline
    BLACK_UNDERLINED: var = "\033[4;30m";  // BLACK
    RED_UNDERLINED: var = "\033[4;31m";    // RED
    GREEN_UNDERLINED: var = "\033[4;32m";  // GREEN
    YELLOW_UNDERLINED: var = "\033[4;33m"; // YELLOW
    BLUE_UNDERLINED: var = "\033[4;34m";   // BLUE
    PURPLE_UNDERLINED: var = "\033[4;35m"; // PURPLE
    CYAN_UNDERLINED: var = "\033[4;36m";   // CYAN
    WHITE_UNDERLINED: var = "\033[4;37m";  // WHITE

    // Background
    BLACK_BACKGROUND: var = "\033[40m";  // BLACK
    RED_BACKGROUND: var = "\033[41m";    // RED
    GREEN_BACKGROUND: var = "\033[42m";  // GREEN
    YELLOW_BACKGROUND: var = "\033[43m"; // YELLOW
    BLUE_BACKGROUND: var = "\033[44m";   // BLUE
    PURPLE_BACKGROUND: var = "\033[45m"; // PURPLE
    CYAN_BACKGROUND: var = "\033[46m";   // CYAN
    WHITE_BACKGROUND: var = "\033[47m";  // WHITE

    // High Intensity
    BLACK_BRIGHT: var = "\033[0;90m";  // BLACK
    RED_BRIGHT: var = "\033[0;91m";    // RED
    GREEN_BRIGHT: var = "\033[0;92m";  // GREEN
    YELLOW_BRIGHT: var = "\033[0;93m"; // YELLOW
    BLUE_BRIGHT: var = "\033[0;94m";   // BLUE
    PURPLE_BRIGHT: var = "\033[0;95m"; // PURPLE
    CYAN_BRIGHT: var = "\033[0;96m";   // CYAN
    WHITE_BRIGHT: var = "\033[0;97m";  // WHITE

    // Bold High Intensity
    BLACK_BOLD_BRIGHT: var = "\033[1;90m"; // BLACK
    RED_BOLD_BRIGHT: var = "\033[1;91m";   // RED
    GREEN_BOLD_BRIGHT: var = "\033[1;92m"; // GREEN
    YELLOW_BOLD_BRIGHT: var = "\033[1;93m";// YELLOW
    BLUE_BOLD_BRIGHT: var = "\033[1;94m";  // BLUE
    PURPLE_BOLD_BRIGHT: var = "\033[1;95m";// PURPLE
    CYAN_BOLD_BRIGHT: var = "\033[1;96m";  // CYAN
    WHITE_BOLD_BRIGHT: var = "\033[1;97m"; // WHITE

    // High Intensity backgrounds
    BLACK_BACKGROUND_BRIGHT: var = "\033[0;100m";// BLACK
    RED_BACKGROUND_BRIGHT: var = "\033[0;101m";// RED
    GREEN_BACKGROUND_BRIGHT: var = "\033[0;102m";// GREEN
    YELLOW_BACKGROUND_BRIGHT: var = "\033[0;103m";// YELLOW
    BLUE_BACKGROUND_BRIGHT: var = "\033[0;104m";// BLUE
    PURPLE_BACKGROUND_BRIGHT: var = "\033[0;105m"; // PURPLE
    CYAN_BACKGROUND_BRIGHT: var = "\033[0;106m";  // CYAN
    WHITE_BACKGROUND_BRIGHT: var = "\033[0;107m";   // WHITE
}

Value writeNative(int argCount, Value* args)
{
    Fox_FixArity(argCount, 1);
    FILE* fp = (FILE *) Fox_GetInstanceCStruct(args[-1]);

    Fox_PanicIfNot(Fox_IsString(args[0]), "Expected string value in write function");
    fputs(Fox_ValueToCString(args[0]), fp);
    return Fox_Nil;
}